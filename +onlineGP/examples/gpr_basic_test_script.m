%======================== gpr_basic_test_script ===========================
%  
%  This code tests the gp_regression and onlineGP modules on some toy data
%  generated by Rasmussen; in fact, this basic script is taken pretty much
%  whole from the code distributed with the reference. Use the 
%  'reduced_set' parameter to change how many points need to be retained.
%  See the documentation for the onlineGP module to get the reference for
%  the reduced-set estimate there. 
%
%  References(s):
%    Gaussian Processes for Machine Learning - Carl Rasmussen 
%
%======================== gpr_basic_test_script ===========================
%
%  Name:	gpr_basic_test_script.m
%
%  Author: 	Hassan A. Kingravi
%
%  Created:  2011/11/05
%  Modified: 2013/05/08
%
%======================== gpr_basic_test_script ===========================
clc; clear all; clear classes; close all

% add path to onlineGP folder and data
addpath('../../')
addpath('./data')

load rasmussen_example_data1; % generated from a gaussian process using GPML software toolkit
z = linspace(min(x), max(x), 301)';

% generate baseline Gaussian process regression
tic
sigma = 0.1;
noise_p = 0.1^2;
A = 1; 

gpr_batch = onlineGP.gp_regression(sigma,sqrt(noise_p),A); 
gpr_batch.train(transpose(x),transpose(y));

ncent = length(z);
mean_batch = zeros(ncent,1);
var_batch = zeros(ncent,1);

for i =1:ncent
 [t1,t2] = gpr_batch.predict(z(i));
 mean_batch(i) = t1;
 var_batch(i) = t2;
end
toc

figure(1);
f = [mean_batch+2*sqrt(var_batch); flipdim(mean_batch-2*sqrt(var_batch),1)];
fill([z; flipdim(z,1)], f, [7 7 7]/8)
hold on; plot(z, mean_batch); plot(x, y, '+r')
legend('2\sigma','mean','data')
title('Original GP Algorithm')


% test online version of online GP
reduced_set = 100;
tol = 2e-2;

tic
gpr_online = onlineGP.onlineGP(sigma,noise_p,reduced_set,tol);
gpr_online.process(x(1)',y(1)'); %initialize

nsamp = size(x,1);

% do sequential updates
for i=2:nsamp
 gpr_online.update(x(i)',y(i)');   
end

% now test regression
mean_online = zeros(ncent,1);
var_online = zeros(ncent,1);

for i =1:ncent
 [t1,t2] = gpr_online.predict(z(i)');
 mean_online(i) = t1;
 var_online(i) = t2;
end

BV = gpr_online.get('basis');
obs = gpr_online.get('obs');

toc

% demonstration of visualize function in onlineGP
fig_struct.axes = 1; 
fig_struct.labels{1} = 'data';
fig_struct.labels{2} = 'observations';

gpr_online.sigma_bound = 2;
gpr_online.visualize(z',fig_struct);

set(figure(1),'Position',[100 100 800 600]);
set(figure(2),'Position',[100 100 800 600]);

